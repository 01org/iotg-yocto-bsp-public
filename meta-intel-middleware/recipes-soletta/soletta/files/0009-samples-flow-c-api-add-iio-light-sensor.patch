From 36fc16ad0dff0589fdd0d23c22210e4959370aa5 Mon Sep 17 00:00:00 2001
From: "Kweh, Hock Leong" <hock.leong.kweh@intel.com>
Date: Thu, 15 Sep 2016 00:43:42 +0800
Subject: [PATCH 09/11] samples/flow/c-api: add iio light sensor

This example obtain light data inputs from iio Ambient Light sensor and
output to console. It is using Soletta highlevel C-api model and resolver
function to extract configuration data from json file. Any changes to
configuration is not require to re-compile.

Upstream-Status: Pending

Signed-off-by: Kweh, Hock Leong <hock.leong.kweh@intel.com>
---
 src/samples/flow/c-api/Kconfig               |    5 ++
 src/samples/flow/c-api/Makefile              |    5 ++
 src/samples/flow/c-api/highlevel-iio-light.c |   96 ++++++++++++++++++++++++++
 src/samples/flow/c-api/sol-flow-iio.json     |   13 ++++
 4 files changed, 119 insertions(+)
 create mode 100644 src/samples/flow/c-api/highlevel-iio-light.c
 create mode 100644 src/samples/flow/c-api/sol-flow-iio.json

diff --git a/src/samples/flow/c-api/Kconfig b/src/samples/flow/c-api/Kconfig
index 6e5f315..d243a4d 100644
--- a/src/samples/flow/c-api/Kconfig
+++ b/src/samples/flow/c-api/Kconfig
@@ -27,3 +27,8 @@ config FLOW_C_API_SINGLE_NODE_SAMPLE
 	bool
 	depends on NODE_DESCRIPTION && FLOW_NODE_TYPE_WALLCLOCK
 	default y
+
+config FLOW_C_API_HIGHLEVEL_IIO_SAMPLE
+	bool
+	depends on USE_FLOW && NODE_DESCRIPTION && RESOLVER_CONFFILE && FLOW_NODE_TYPE_CONSOLE && FLOW_NODE_TYPE_TIMER && FLOW_NODE_TYPE_IIO
+	default y
\ No newline at end of file
diff --git a/src/samples/flow/c-api/Makefile b/src/samples/flow/c-api/Makefile
index d8083c6..240496d 100644
--- a/src/samples/flow/c-api/Makefile
+++ b/src/samples/flow/c-api/Makefile
@@ -22,3 +22,8 @@ sample-find-type-$(FLOW_C_API_FIND_TYPE_SAMPLE)-extra-ldflags := -ldl
 
 sample-$(FLOW_C_API_SINGLE_NODE_SAMPLE) += single-node
 sample-single-node-$(FLOW_C_API_SINGLE_NODE_SAMPLE) := single-node.c
+
+sample-$(FLOW_C_API_HIGHLEVEL_IIO_SAMPLE) += highlevel-iio-light
+sample-highlevel-iio-light-$(FLOW_C_API_HIGHLEVEL_IIO_SAMPLE) := \
+	highlevel-iio-light.c
+sample-highlevel-iio-light-ldflags += -L$(build_modulesdir)/flow -l:iio.so
diff --git a/src/samples/flow/c-api/highlevel-iio-light.c b/src/samples/flow/c-api/highlevel-iio-light.c
new file mode 100644
index 0000000..8432963
--- /dev/null
+++ b/src/samples/flow/c-api/highlevel-iio-light.c
@@ -0,0 +1,96 @@
+/* This file is part of the Soletta (TM) Project
+ *
+ * Copyright (C) 2016 Intel Corporation. All rights reserved.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include <stdlib.h>
+#include <stdio.h>
+#include "soletta.h"
+#include "sol-flow-builder.h"
+#include "sol-flow-resolver.h"
+#include "sol-flow/timer.h"
+#include "sol-flow/iio.h"
+#include "sol-flow/console.h"
+
+static struct sol_flow_node_type *flow_node_type;
+static struct sol_flow_node *flow;
+
+static void
+startup(void)
+{
+    const char *name = "MyLight";
+    const struct sol_flow_node_type *type;
+    struct sol_flow_node_named_options resolved_opts;
+    struct sol_flow_node_type_iio_light_sensor_options *light_opts;
+    struct sol_flow_node_type_timer_options timer_opts =
+        SOL_FLOW_NODE_TYPE_TIMER_OPTIONS_DEFAULTS(.interval = 1000,);
+    struct sol_flow_node_type_console_options console_opts =
+        SOL_FLOW_NODE_TYPE_CONSOLE_OPTIONS_DEFAULTS(
+            .prefix = "Light illuminance = ",
+            .suffix = " Lux",
+        );
+    struct sol_flow_builder *builder;
+    int err;
+
+    /* obtain sensor node configuration from json */
+    err = sol_flow_resolve(sol_flow_get_builtins_resolver(), name, &type,
+                           &resolved_opts);
+    if (err < 0) {
+        err = sol_flow_resolve(NULL, name, &type, &resolved_opts);
+        if (err < 0) {
+            printf("Unable to locate '%s' inside json file\n", name);
+            sol_quit();
+        }
+    }
+
+    /* convert the options setting from json to node type options structure */
+    sol_flow_node_options_new(type, &resolved_opts,
+                              (sol_flow_node_options **)&light_opts);
+
+    /* use Soletta high-level API builder functions to create node types
+     * and nodes connection. This equal to fbp:
+     * timer OUT -> TICK light OUT -> IN console
+     */
+    builder = sol_flow_builder_new();
+    /* create nodes */
+    sol_flow_builder_add_node(builder, "timer", SOL_FLOW_NODE_TYPE_TIMER,
+                              &timer_opts.base);
+    sol_flow_builder_add_node(builder, "light",
+                              SOL_FLOW_NODE_TYPE_IIO_LIGHT_SENSOR,
+                              &light_opts->base);
+    sol_flow_builder_add_node(builder, "console", SOL_FLOW_NODE_TYPE_CONSOLE,
+                              &console_opts.base);
+    /* connect nodes */
+    sol_flow_builder_connect(builder, "timer", "OUT", -1, "light", "TICK", -1);
+    sol_flow_builder_connect(builder, "light", "OUT", -1, "console", "IN", -1);
+
+    /* use Soletta low-level API to create actual flow node type run model */
+    flow_node_type = sol_flow_builder_get_node_type(builder);
+    /* create and run the flow */
+    flow = sol_flow_node_new(NULL, "highlevel", flow_node_type, NULL);
+    /* builder is no longer required, delete it */
+    sol_flow_builder_del(builder);
+}
+
+static void
+shutdown(void)
+{
+    /* stop the flow, disconnect ports and close children nodes */
+    sol_flow_node_del(flow);
+    /* delete the node type we've created with builder */
+    sol_flow_node_type_del(flow_node_type);
+}
+
+SOL_MAIN_DEFAULT(startup, shutdown);
diff --git a/src/samples/flow/c-api/sol-flow-iio.json b/src/samples/flow/c-api/sol-flow-iio.json
new file mode 100644
index 0000000..56cff13
--- /dev/null
+++ b/src/samples/flow/c-api/sol-flow-iio.json
@@ -0,0 +1,13 @@
+{
+  "$schema": "http://solettaproject.github.io/soletta/schemas/config.schema",
+  "nodetypes": [
+    {
+      "name": "MyLight",
+      "type": "iio/light-sensor",
+      "options": {
+        "iio_device": "als",
+        "buffer_size": -1
+      }
+    }
+  ]
+}
-- 
1.7.9.5


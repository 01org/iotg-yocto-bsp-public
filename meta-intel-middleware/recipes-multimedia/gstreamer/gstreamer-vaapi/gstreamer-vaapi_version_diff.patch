diff -x .git -x .gitignore -Naur gstreamer-vaapi/gms-integration isg_gms-gstreamer-vaapi/gms-integration
--- gstreamer-vaapi/gms-integration	1970-01-01 07:30:00.000000000 +0730
+++ isg_gms-gstreamer-vaapi/gms-integration	2016-05-31 03:43:30.284900171 +0800
@@ -0,0 +1,5 @@
+###
+### GMS integration
+###
+upstream a486942ba2d44ba2f60fec25175c681786021b48
+	decoder: h265: Fix offset calculation in codec_data parsing
diff -x .git -x .gitignore -Naur gstreamer-vaapi/gst/vaapi/gstvaapipostproc.c isg_gms-gstreamer-vaapi/gst/vaapi/gstvaapipostproc.c
--- gstreamer-vaapi/gst/vaapi/gstvaapipostproc.c	2016-05-31 03:43:40.941079001 +0800
+++ isg_gms-gstreamer-vaapi/gst/vaapi/gstvaapipostproc.c	2016-05-31 03:43:30.304900506 +0800
@@ -469,6 +469,25 @@
   return success;
 }
 
+static gboolean
+gst_vaapipostproc_colorcorrect (GstVaapiPostproc * postproc, GstBuffer * buf)
+{
+  GstVaapiVideoMeta *buf_meta;
+  GstVaapiSurface *buf_surface;
+  gboolean ret;
+
+  buf_meta = gst_buffer_get_vaapi_video_meta (buf);
+  if (!buf_meta) {
+    GST_ERROR ("No meta data!");
+    return FALSE;
+  }
+
+  buf_surface = gst_vaapi_video_meta_get_surface (buf_meta);
+  ret = gst_vaapi_filter_colorcorrect (postproc->filter, buf_surface, buf);
+
+  return ret;
+}
+
 static GstFlowReturn
 gst_vaapipostproc_process_vpp (GstBaseTransform * trans, GstBuffer * inbuf,
     GstBuffer * outbuf)
@@ -1181,6 +1200,8 @@
   GstBuffer *buf;
   GstFlowReturn ret;
 
+  gst_vaapipostproc_colorcorrect (postproc, inbuf);
+
   ret =
       gst_vaapi_plugin_base_get_input_buffer (GST_VAAPI_PLUGIN_BASE (postproc),
       inbuf, &buf);
diff -x .git -x .gitignore -Naur gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapifilter.c isg_gms-gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapifilter.c
--- gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapifilter.c	2016-05-31 03:43:40.893078195 +0800
+++ isg_gms-gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapifilter.c	2016-05-31 03:43:30.292900304 +0800
@@ -38,6 +38,12 @@
 #define GST_VAAPI_FILTER(obj) \
     ((GstVaapiFilter *)(obj))
 
+// Color conversion
+#define RGB565_32_TO_RGBX(color) \
+       ((color & 0x00070000) | (color & 0x001f0000)<<3) | \
+       ((color & 0x00000300) | (color & 0x00003f00)<<2) | \
+       ((color & 0x00000007) | (color & 0x0000001f)<<3)
+
 typedef struct _GstVaapiFilterOpData GstVaapiFilterOpData;
 struct _GstVaapiFilterOpData
 {
@@ -1877,3 +1883,34 @@
   return op_set_skintone (filter,
       find_operation (filter, GST_VAAPI_FILTER_OP_SKINTONE), enhance);
 }
+
+gboolean
+gst_vaapi_filter_colorcorrect (GstVaapiFilter * filter,
+    GstVaapiSurface * surface, GstBuffer * buf)
+{
+  GstMapInfo map;
+  guint w, h, width, height;
+  guint32 *pixel;
+
+  g_return_val_if_fail (filter != NULL, FALSE);
+  g_return_val_if_fail (surface != NULL, FALSE);
+
+  if (surface->chroma_type == GST_VAAPI_CHROMA_TYPE_RGB16_32BPP) {
+    width = surface->width;
+    height = surface->height;
+
+    gst_buffer_map (buf, &map, GST_MAP_WRITE | GST_MAP_READ);
+
+    pixel = (gint32 *) map.data;
+    for (w = 0; w < width; w++) {
+      for (h = 0; h < height; h++) {
+        *(pixel) = RGB565_32_TO_RGBX (*(pixel));
+        pixel++;
+      }
+    }
+
+    gst_buffer_unmap (buf, &map);
+  }
+
+  return TRUE;
+}
diff -x .git -x .gitignore -Naur gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapifilter.h isg_gms-gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapifilter.h
--- gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapifilter.h	2016-05-31 03:43:40.893078195 +0800
+++ isg_gms-gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapifilter.h	2016-05-31 03:43:30.292900304 +0800
@@ -246,4 +246,8 @@
 gst_vaapi_filter_set_skintone (GstVaapiFilter * filter,
     gboolean enhance);
 
+gboolean
+gst_vaapi_filter_colorcorrect (GstVaapiFilter * filter,
+    GstVaapiSurface * surface, GstBuffer * buf);
+
 #endif /* GST_VAAPI_FILTER_H */
diff -x .git -x .gitignore -Naur gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapisurface.h isg_gms-gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapisurface.h
--- gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapisurface.h	2016-05-31 03:43:40.893078195 +0800
+++ isg_gms-gstreamer-vaapi/gst-libs/gst/vaapi/gstvaapisurface.h	2016-05-31 03:43:30.296900371 +0800
@@ -66,6 +66,7 @@
  * @GST_VAAPI_CHROMA_TYPE_RGB32: 32-bit RGB chroma format
  * @GST_VAAPI_CHROMA_TYPE_RGB16: 16-bit RGB chroma format
  * @GST_VAAPI_CHROMA_TYPE_YUV420_10BPP: YUV 4:2:0 chroma format, more than 8 bits per channel
+ * @GST_VAAPI_CHROMA_TYPE_RGB16_32BPP: 32-bit RGB565 chroma format (special)
  *
  * The set of all chroma types for #GstVaapiSurface.
  */
@@ -79,7 +80,8 @@
   GST_VAAPI_CHROMA_TYPE_YUV400,
   GST_VAAPI_CHROMA_TYPE_RGB32,
   GST_VAAPI_CHROMA_TYPE_RGB16,
-  GST_VAAPI_CHROMA_TYPE_YUV420_10BPP
+  GST_VAAPI_CHROMA_TYPE_YUV420_10BPP,
+  GST_VAAPI_CHROMA_TYPE_RGB16_32BPP
 } GstVaapiChromaType;
 
 /**

From 861d0502ddc248aaf3e95428751ce88ede11b96a Mon Sep 17 00:00:00 2001
From: "Tunik, Raman" <Raman_Tunik@mentor.com>
Date: Tue, 14 Mar 2017 17:11:48 +0100
Subject: [PATCH] intel_pstate: Add forced CPU pstate change notification

In case of no CPU frequency changes during 10 periods of a timer,
send a force notification with a current value of CPU frequency.

Signed-off-by: Tunik, Raman <Raman_Tunik@mentor.com>
Signed-off-by: Wan Ahmad Zainie <wan.ahmad.zainie.wan.mohamad@intel.com>
---
 drivers/cpufreq/intel_pstate.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/cpufreq/intel_pstate.c b/drivers/cpufreq/intel_pstate.c
index a40c3e7..569670e 100644
--- a/drivers/cpufreq/intel_pstate.c
+++ b/drivers/cpufreq/intel_pstate.c
@@ -56,6 +56,9 @@
 #define fp_ext_toint(X) ((X) >> EXT_FRAC_BITS)
 #define int_ext_tofp(X) ((int64_t)(X) << EXT_FRAC_BITS)
 
+/* Number of timer cycles for triggering force notification */
+#define NUM_CYCLES 10
+
 static ATOMIC_NOTIFIER_HEAD(pstate_freq_notifier_list);
 
 static int notification_registered_flag;
@@ -236,6 +239,7 @@ struct global_params {
  */
 struct cpudata {
 	int cpu;
+	int counter;
 
 	unsigned int policy;
 	struct update_util_data update_util;
@@ -1460,6 +1464,7 @@ int pstate_unregister_freq_notify(struct notifier_block *nb)
 
 static int pstate_notifier_call_chain(struct cpudata *cpu)
 {
+	cpu->counter = 0;
 	return atomic_notifier_call_chain(&pstate_freq_notifier_list,
 		(unsigned long) cpu->pstate.current_pstate,
 		(void *) (long) (cpu->cpu));
@@ -1467,6 +1472,12 @@ static int pstate_notifier_call_chain(struct cpudata *cpu)
 
 static void intel_pstate_set_pstate(struct cpudata *cpu, int pstate)
 {
+	if (pstate == cpu->pstate.current_pstate) {
+		if (++cpu->counter >= NUM_CYCLES)
+			pstate_notifier_call_chain(cpu);
+		return;
+	}
+
 	trace_cpu_frequency(pstate * cpu->pstate.scaling, cpu->cpu);
 	cpu->pstate.current_pstate = pstate;
 	/*
@@ -1743,11 +1754,16 @@ static int intel_pstate_prepare_request(struct cpudata *cpu, int pstate)
 
 static void intel_pstate_update_pstate(struct cpudata *cpu, int pstate)
 {
-	if (pstate == cpu->pstate.current_pstate)
+	if (pstate == cpu->pstate.current_pstate) {
+		if (++cpu->counter >= NUM_CYCLES)
+			pstate_notifier_call_chain(cpu);
 		return;
+	}
 
 	cpu->pstate.current_pstate = pstate;
 	wrmsrl(MSR_IA32_PERF_CTL, pstate_funcs.get_val(cpu, pstate));
+
+	pstate_notifier_call_chain(cpu);
 }
 
 static void intel_pstate_adjust_pstate(struct cpudata *cpu)
-- 
1.9.1


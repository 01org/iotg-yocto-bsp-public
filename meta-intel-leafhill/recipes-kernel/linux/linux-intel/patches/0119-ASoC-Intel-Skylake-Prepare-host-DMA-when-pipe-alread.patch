From e5779dfd64444a409744ced626402730b2896379 Mon Sep 17 00:00:00 2001
From: Szymon Mielczarek <szymonx.mielczarek@intel.com>
Date: Mon, 27 May 2019 13:27:55 +0200
Subject: [PATCH 119/120] ASoC: Intel: Skylake: Prepare host DMA when pipe
 already in RESET state

While playing multiple wav files on the same PCM channel the user-space may
call hw_free between them to free associated resources. As a result,
the pipe and HDA core stream will be reset. While starting the pipeline for
the subsequent file it will end up with HDA stream unprepared.

To handle this case we allow preparing of HDA stream also if the pipeline
is in RESET state.

Change-Id: I3bec84a0a15585c9fd2931bc3718e0fb15678ccb
Signed-off-by: Szymon Mielczarek <szymonx.mielczarek@intel.com>
---
 sound/soc/intel/skylake/skl-pcm.c | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/sound/soc/intel/skylake/skl-pcm.c b/sound/soc/intel/skylake/skl-pcm.c
index 875b040..593b250 100644
--- a/sound/soc/intel/skylake/skl-pcm.c
+++ b/sound/soc/intel/skylake/skl-pcm.c
@@ -323,17 +323,21 @@ static int skl_pcm_prepare(struct snd_pcm_substream *substream,
 	dev_dbg(dai->dev, "%s: %s\n", __func__, dai->name);
 
 	mconfig = skl_tplg_fe_get_cpr_module(dai, substream->stream);
+	if (!mconfig)
+		return -EINVAL;
 
 	/*
 	 * In case of XRUN recovery or in the case when the application
 	 * calls prepare another time, reset the FW pipe to clean state
 	 */
-	if (mconfig &&
-		((substream->runtime->status->state == SNDRV_PCM_STATE_XRUN) ||
-		(mconfig->pipe->state == SKL_PIPE_CREATED) ||
-		(mconfig->pipe->state == SKL_PIPE_PAUSED))) {
-
-		skl_reset_pipe(skl->skl_sst, mconfig->pipe);
+	if (substream->runtime->status->state == SNDRV_PCM_STATE_XRUN ||
+		mconfig->pipe->state == SKL_PIPE_PAUSED) {
+		ret = skl_reset_pipe(skl->skl_sst, mconfig->pipe);
+		if (ret < 0)
+			return ret;
+	}
+	if (mconfig->pipe->state == SKL_PIPE_CREATED ||
+		mconfig->pipe->state == SKL_PIPE_RESET) {
 		ret = skl_pcm_host_dma_prepare(dai->dev,
 					mconfig->pipe->p_params);
 		if (ret < 0)
-- 
1.9.1

